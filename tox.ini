[tox]
envlist =
    {py36,py37}--django{2.0,2.1,2.2,3.0,3.1,3.2}
    {py38,py39}--django{2.2,3.0,3.1,3.2,4.0,4.1}
    {py310,py311}--django{3.1,3.2,4.0,4.1},syntax

[testenv]
commands =python dev/manage.py test tests --noinput
deps=
  django2.0: django>=2.0,<2.1
  django2.1: django>=2.1,<2.2
  django2.2: django>=2.2,<2.3
  django3.0: django>=3.0,<3.1
  django3.1: django>=3.1,<3.2
  django3.2: django>=3.2,<3.3
  django4.0: django>=4.0,<4.1
  django4.1: django>=4.1,<4.2
  django2.0: psycopg2-binary
  django2.1: psycopg2-binary
  django2.2: psycopg2-binary
  django3.0: psycopg2-binary
  django3.1: psycopg2-binary
  django3.2: psycopg2-binary
  django4.0: psycopg2-binary
  django4.1: psycopg2-binary
  mock
setenv =
    DATABASE_USER={env:DATABASE_USER:test}
    DATABASE_PASSWORD={env:DATABASE_PASSWORD:test}
    DATABASE_HOST={env:DATABASE_HOST:127.0.0.1}
    DATABASE_NAME={env:DATABASE_NAME:geoadmin}

[testenv:syntax]
commands =
    flake8
    isort -rc -c .
deps =
    flake8
    isort<5.0.0

[testenv:coverage]
commands =
    coverage run --omit=dev/manage.py dev/manage.py test tests
    coverage xml
    bash -c "bash <(curl -s https://codecov.io/bash)"
deps =
    django
    mock
    psycopg2-binary
    coverage
    django>=4.1,<4.2
setenv =
    DATABASE_USER={env:DATABASE_USER:test}
    DATABASE_PASSWORD={env:DATABASE_PASSWORD:test}
    DATABASE_HOST={env:DATABASE_HOST:127.0.0.1}
    DATABASE_NAME={env:DATABASE_NAME:geoadmin}
    CODECOV_TOKEN=939ecf3f-2eaf-43a5-b533-e919cdf1ef66
whitelist_externals =
    bash

[flake8]
ignore = F403,W191,E124,E126,E128
max-line-length = 160
exclude = migrations, manage.py, .git, .tox, build, dist, *.egg-info

[isort]
indent=4
combine_star=1
combine_as_imports=1
include_trailing_comma=1
multi_line_output=3
lines_after_imports=2
known_django=django
known_future_library=future
known_first_party=leaflet_admin_list
default_section=THIRDPARTY
sections=FUTURE,STDLIB,THIRDPARTY,DJANGO,FIRSTPARTY,LOCALFOLDER
skip_glob=*migrations*,*.egg-info
skip=.tox,build,dist
